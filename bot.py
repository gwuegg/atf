import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.utils.keyboard import InlineKeyboardBuilder
import asyncio
import json

TOKEN = "YOUR_BOT_TOKEN"

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

STATS_FILE = "stats.json"

def load_stats():
    try:
        with open(STATS_FILE, "r") as f:
            return json.load(f)
    except:
        return {}

def save_stats(data):
    with open(STATS_FILE, "w") as f:
        json.dump(data, f, indent=2)

@dp.message(F.text == "/start")
async def start_handler(message: types.Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÆ –ò–≥—Ä–∞—Ç—å", web_app=WebAppInfo(url="https://yourdomain.com/"))],
        [InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="my_stats")]
    ])
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>ATF Carts</b>!
–ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:", reply_markup=kb)

@dp.callback_query(F.data == "my_stats")
async def stats_handler(callback: types.CallbackQuery):
    user_id = str(callback.from_user.id)
    stats = load_stats().get(user_id, {
        "distance": 0,
        "tools": 0,
        "currency": 0
    })
    msg = f"üìä <b>–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>:
"
    msg += f"üöö –ü—Ä–æ–π–¥–µ–Ω–æ: {stats['distance']}–º
"
    msg += f"üß∞ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: {stats['tools']}
"
    msg += f"üí∞ –ú–æ–Ω–µ—Ç—ã: {stats['currency']}"
    await callback.message.edit_text(msg)

@dp.message(F.web_app_data)
async def webapp_data_handler(message: types.Message):
    data = json.loads(message.web_app_data.data)
    user_id = str(message.from_user.id)
    stats = load_stats()
    stats[user_id] = data
    save_stats(stats)
    await message.answer("‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())